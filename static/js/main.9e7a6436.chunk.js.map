{"version":3,"sources":["components/form/form.jsx","store/actions/github-actions/github-actions.js","store/actions/typeActions.js","custom-hooks/use-callback-data/useCallbackData.jsx","components/form/formContainer.jsx","assets/icons/icons.js","components/github-repository/card-repository/CardRepository.jsx","components/github-repository/GithubRepository.jsx","components/github-repository/GithubRepositoryContainer.jsx","custom-hooks/use-user-name/useUserName.jsx","components/content.jsx","App.js","api/Http.js","api/ServiceFactory.js","api/github-service/github.service.js","store/sagas/sagas.js","store/reducers/index.js","store/reducers/users/users.js","store/reducers/repository/repository.js","store/store.js","index.js"],"names":["Form","search","userNameHandler","onSubmit","e","preventDefault","className","type","onChange","placeholder","requestApiCall","userName","requestApiCallWithRepositories","useCallbackData","memorizedFunction","args","dispatch","useDispatch","callback","useCallback","FormContainer","useState","setUserName","target","value","chevronUp","width","height","viewBox","fill","xmlns","fillRule","d","clipRule","chevronDown","starIcon","CardRepository","name","stargazers_count","description","GithubRepository","repositories","userNameFromHook","isShowDropdown","toggleDropdown","data-toggle","onClick","filter","repo","owner","login","map","key","GithubRepositoryContainer","setIsShowDropdown","useUserName","users","useSelector","state","data","useEffect","Content","App","axios","create","baseURL","services","get","Http","console","log","getRepositories","username","ServiceFactory","getUsers","mySaga","repositoriesService","action","call","putResolve","items","put","message","takeEvery","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","composeEnhancers","compose","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e7a6436.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Form = ({ search, userNameHandler }) => (\n  <form onSubmit={e => { e.preventDefault(); search() }}>\n    <div className=\"form-group\">\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        onChange={userNameHandler}\n        placeholder=\"Enter username\"\n      />\n    </div>\n    <button className=\"btn btn-primary w-100\">\n      Search\n    </button>\n  </form>\n)","import {\n  REQUEST_API_USERS,\n  RECEIVE_API_USERS,\n  REQUEST_API_REPOSITORIES,\n  RECEIVE_API_REPOSITORIES\n} from '../typeActions'\n\nexport const requestApiCall = userName => ({ type: REQUEST_API_USERS, userName })\n\nexport const receiveApiCall = data => ({ type: RECEIVE_API_USERS, data })\n\nexport const requestApiCallWithRepositories = userName => ({ type: REQUEST_API_REPOSITORIES, userName })\n\nexport const receiveApiCallWithRepositories = data => ({ type: RECEIVE_API_REPOSITORIES, data })\n","export const REQUEST_API_REPOSITORIES = 'REQUEST_API_REPOSITORIES'\nexport const RECEIVE_API_REPOSITORIES = 'RECEIVE_API_REPOSITORIES'\n\nexport const REQUEST_API_USERS = 'REQUEST_API_USERS'\nexport const RECEIVE_API_USERS = 'RECEIVE_API_USERS'\n\nexport const FETCH_FAILED = 'FETCH_FAILED'","import { useCallback } from 'react'\nimport { useDispatch } from 'react-redux';\n\n\nexport const useCallbackData = (memorizedFunction, args) => {\n  const dispatch = useDispatch()\n\n  const callback = useCallback(() => {\n    args !== '' && dispatch(memorizedFunction(args))\n  }, [args])\n\n  return { callback }\n}","import React, { useState } from 'react';\n\nimport { Form } from './form'\nimport { requestApiCall } from '../../store/actions/github-actions/github-actions'\nimport { useCallbackData } from '../../custom-hooks/index'\n\nexport const FormContainer = () => {\n\n  const [userName, setUserName] = useState('')\n\n  const { callback } = useCallbackData(requestApiCall, userName)\n\n  const userNameHandler = e => setUserName(e.target.value)\n\n  return <Form {...{ userNameHandler }} search={callback}/>\n}\n","import React from 'react';\n\nexport const chevronUp = (\n  <svg className=\"bi bi-chevron-up\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M7.646 4.646a.5.5 0 01.708 0l6 6a.5.5 0 01-.708.708L8 5.707l-5.646 5.647a.5.5 0 01-.708-.708l6-6z\" clipRule=\"evenodd\" />\n  </svg>\n)\n\nexport const chevronDown = (\n  <svg className=\"bi bi-chevron-down\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M1.646 4.646a.5.5 0 01.708 0L8 10.293l5.646-5.647a.5.5 0 01.708.708l-6 6a.5.5 0 01-.708 0l-6-6a.5.5 0 010-.708z\" clipRule=\"evenodd\" />\n  </svg>\n)\n\nexport const starIcon = (\n  <svg className=\"bi bi-star-fill\" width=\"1.2em\" height=\"1.2em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\" />\n  </svg>\n)","import React from 'react'\n\nimport './card-repository.scss'\n\nimport { starIcon } from '../../../assets/icons/icons'\n\nexport const CardRepository = ({ name, stargazers_count, description }) => (\n  <div className=\"card\">\n    <div className=\"card-body\">\n      <div className=\"card-header\">\n        <h5 className=\"card-title\">\n          { name }\n        </h5>\n        <h5 className=\"card-subtitle mb-2 text-muted d-flex justify-content-center align-items-center\">\n          <span className=\"card-subtitle__element\">\n            { stargazers_count }\n          </span>\n          <span className=\"card-subtitle__element\">\n            { starIcon }\n          </span>\n        </h5>\n      </div>\n      <p className=\"card-text\">\n        { description }\n      </p>\n    </div>\n  </div>\n)","import React from 'react'\n\nimport { CardRepository } from './card-repository/CardRepository'\nimport { chevronUp, chevronDown } from '../../assets/icons/icons'\n\nimport './github-repository.scss'\n\nexport const GithubRepository = ({\n  userName,\n  repositories,\n  userNameFromHook,\n  userNameHandler,\n  isShowDropdown,\n  toggleDropdown\n}) => (\n  <div className=\"card-users\">\n    <div className=\"card\">\n      <div className=\"card-header\">\n        <h2 className=\"mb-0 user-name\">\n          <button\n            className=\"btn btn__user\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            onClick={() => {\n              userNameHandler(userName)\n              toggleDropdown()\n            }}\n          >\n              { userName }\n              {\n                (userNameFromHook === userName && isShowDropdown)\n                  ? chevronDown\n                  : chevronUp\n              }\n          </button>\n        </h2>\n      </div>\n\n      <div className={(userNameFromHook === userName && isShowDropdown) ? 'collapse show' : 'collapse'}>\n        <div className=\"card-body\">\n          {repositories\n            ? repositories\n                .filter(repo => repo.owner.login === userName)\n                .map(({ name, stargazers_count, description }) => (\n                  <CardRepository key={name} {...{ name, stargazers_count, description }} />\n                ))\n            : null}\n        </div>\n      </div>\n    </div>\n  </div>\n)","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { requestApiCallWithRepositories } from '../../store/actions/github-actions/github-actions'\nimport { useCallbackData, useUserName } from '../../custom-hooks/index'\n\nimport { GithubRepository } from './GithubRepository'\n\nexport const GithubRepositoryContainer = () => {\n  const [isShowDropdown, setIsShowDropdown] = useState(false)\n\n  const { userName: userNameFromHook, userNameHandler } = useUserName()\n\n  const { callback } = useCallbackData(requestApiCallWithRepositories, userNameFromHook)\n\n  const users = useSelector(state => state.users.data)\n  const repositories = useSelector(state => state.repositories.data)\n\n  const toggleDropdown = () => setIsShowDropdown(!isShowDropdown)\n\n  useEffect(() => {\n    callback()\n  }, [userNameFromHook, callback]);\n\n  return(\n    <>\n      {\n        users && users.map(({ login }) => (\n          <GithubRepository\n            key={login}\n            userName={login}\n            {...{\n              isShowDropdown,\n              repositories,\n              userNameFromHook,\n              userNameHandler,\n              toggleDropdown\n            }}\n          />\n        ))\n      }\n    </>\n  )\n}","import { useState } from 'react'\n\nexport const useUserName = () => {\n  const [userName, setUserName] = useState('')\n\n  const userNameHandler = userName => setUserName(userName)\n\n  return { userName, userNameHandler }\n}","import React from 'react'\n\nimport { FormContainer } from './form/formContainer'\nimport { GithubRepositoryContainer } from './github-repository/GithubRepositoryContainer'\n\nexport const Content = () => (\n  <div className=\"content\">\n    <div className=\"container\">\n      <div className=\"row d-flex justify-content-center w-100\">\n        <div className=\"col-xl-12 w-100\">\n          <FormContainer />\n        </div>\n        <div className=\"col-xl-12 w-100\">\n          <GithubRepositoryContainer />\n        </div>\n      </div>\n    </div>\n  </div>\n)","import React from 'react'\n\nimport { Content } from './components/content'\n\nimport './assets/styles/app.scss'\n\nexport const App = () => <Content />\n","import axios from 'axios'\n\nexport const baseURL = 'https://api.github.com/'\n\nexport default axios.create({\n  baseURL\n})","import GithubService from './github-service/github.service'\n\nconst services = {\n  repositories: GithubService\n}\n\nexport const ServiceFactory = {\n  get: name => services[name]\n}","import Http from '../Http'\n\nexport default {\n  async get (userName) {\n    try {\n      return await Http.get(`search/users?q=${userName}&per_page=5`)\n    } catch (err) {\n      console.log(err)\n    }\n  },\n  async getRepositories (username) {\n    try {\n      return await Http.get(`users/${username}/repos`)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n}","import { call, put, takeEvery, putResolve } from 'redux-saga/effects'\nimport { ServiceFactory } from '../../api/ServiceFactory'\nimport { receiveApiCall, receiveApiCallWithRepositories } from '../actions/github-actions/github-actions'\n\nimport {\n  REQUEST_API_REPOSITORIES,\n  FETCH_FAILED,\n  REQUEST_API_USERS\n} from '../actions/typeActions'\n\nconst repositoriesService = ServiceFactory.get('repositories')\n\nfunction* getUsers (action) {\n  const { userName } = action\n\n  try {\n    const users = yield call(repositoriesService.get, userName)\n    yield putResolve(receiveApiCall(users.data.items))\n  } catch (error) {\n    yield put({ type: FETCH_FAILED, message: error.message })\n    console.log(error)\n  }\n}\n\nfunction* getRepositories (action) {\n  const { userName } = action\n\n  try {\n    const repositories = yield call(repositoriesService.getRepositories, userName)\n    yield putResolve(receiveApiCallWithRepositories(repositories.data))\n  } catch (error) {\n    yield put({ type: FETCH_FAILED, message: error.message })\n    console.log(error)\n  }\n\n}\n\nfunction* mySaga () {\n  yield takeEvery(REQUEST_API_USERS, getUsers)\n  yield takeEvery(REQUEST_API_REPOSITORIES, getRepositories)\n}\n\nexport default mySaga","\nimport { combineReducers } from 'redux'\n\nimport { users } from './users/users'\nimport { repositories } from './repository/repository'\n\nconst rootReducer = combineReducers({\n  users,\n  repositories\n})\n\nexport default rootReducer","import { RECEIVE_API_USERS } from '../../actions/typeActions'\n\nexport function users (state = [], { type, data }) {\n  switch (type) {\n    case RECEIVE_API_USERS:\n      return { ...state, data }\n    default:\n      return state;\n  }\n}\n","import { RECEIVE_API_REPOSITORIES } from '../../actions/typeActions'\n\nexport function repositories (state = {}, { type, data }) {\n  switch (type) {\n    case RECEIVE_API_REPOSITORIES:\n      return { ...state, data }\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport mySaga from './sagas/sagas'\nimport rootReducer from './reducers/index';\n\nconst defaultState = {};\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = process.env.NODE_ENV !== 'production'\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  : compose;\n\nconst store = createStore(\n  rootReducer,\n  defaultState,\n  composeEnhancers(applyMiddleware(sagaMiddleware)),\n)\n\nsagaMiddleware.run(mySaga)\n\nexport default store;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport { App } from './App'\nimport store from './store/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}